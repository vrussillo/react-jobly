{"ast":null,"code":"import React,{useContext}from\"react\";import{Route,Redirect}from\"react-router-dom\";import UserContext from\"../auth/UserContext\";/** \"Higher-Order Component\" for private routes.\n *\n * In routing component, use these instead of <Route ...>. This component\n * will check if there is a valid current user and only continues to the\n * route if so. If no user is present, redirects to login form.\n */function PrivateRoute(_ref){var exact=_ref.exact,path=_ref.path,children=_ref.children;var _useContext=useContext(UserContext),currentUser=_useContext.currentUser;console.debug(\"PrivateRoute\",\"exact=\",exact,\"path=\",path,\"currentUser=\",currentUser);if(!currentUser){return/*#__PURE__*/React.createElement(Redirect,{to:\"/login\"});}return/*#__PURE__*/React.createElement(Route,{exact:exact,path:path},children);}export default PrivateRoute;","map":{"version":3,"sources":["/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/src/routes-nav/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","UserContext","PrivateRoute","exact","path","children","currentUser","console","debug"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CAEA;AACA;AACA;AACA;AACA;AACA,GAEA,QAASC,CAAAA,YAAT,MAAiD,IAAzBC,CAAAA,KAAyB,MAAzBA,KAAyB,CAAlBC,IAAkB,MAAlBA,IAAkB,CAAZC,QAAY,MAAZA,QAAY,CAC/C,gBAAwBP,UAAU,CAACG,WAAD,CAAlC,CAAQK,WAAR,aAAQA,WAAR,CAEAC,OAAO,CAACC,KAAR,CACI,cADJ,CAEI,QAFJ,CAEcL,KAFd,CAGI,OAHJ,CAGaC,IAHb,CAII,cAJJ,CAIoBE,WAJpB,EAOA,GAAI,CAACA,WAAL,CAAkB,CAChB,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EAAP,CACD,CAED,mBACI,oBAAC,KAAD,EAAO,KAAK,CAAEH,KAAd,CAAqB,IAAI,CAAEC,IAA3B,EACGC,QADH,CADJ,CAKD,CAED,cAAeH,CAAAA,YAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n\n/** \"Higher-Order Component\" for private routes.\n *\n * In routing component, use these instead of <Route ...>. This component\n * will check if there is a valid current user and only continues to the\n * route if so. If no user is present, redirects to login form.\n */\n\nfunction PrivateRoute({ exact, path, children }) {\n  const { currentUser } = useContext(UserContext);\n\n  console.debug(\n      \"PrivateRoute\",\n      \"exact=\", exact,\n      \"path=\", path,\n      \"currentUser=\", currentUser,\n  );\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n      <Route exact={exact} path={path}>\n        {children}\n      </Route>\n  );\n}\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}