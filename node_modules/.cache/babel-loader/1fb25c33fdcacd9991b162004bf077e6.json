{"ast":null,"code":"import _regeneratorRuntime from\"/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _defineProperty from\"/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from\"react\";import Alert from\"../common/Alert\";import JoblyApi from\"../api/api\";import UserContext from\"../auth/UserContext\";// eslint-disable-next-line\nimport useTimedMessage from\"../hooks/useTimedMessage\";/** Profile editing form.\n *\n * Displays profile form and handles changes to local form state.\n * Submitting the form calls the API to save, and triggers user reloading\n * throughout the site.\n *\n * Confirmation of a successful save is normally a simple <Alert>, but\n * you can opt-in to our fancy limited-time-display message hook,\n * `useTimedMessage`, but switching the lines below.\n *\n * Routed as /profile\n * Routes -> ProfileForm -> Alert\n */function ProfileForm(){var _useContext=useContext(UserContext),currentUser=_useContext.currentUser,setCurrentUser=_useContext.setCurrentUser;var _useState=useState({firstName:currentUser.firstName,lastName:currentUser.lastName,email:currentUser.email,username:currentUser.username,password:\"\"}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),formErrors=_useState4[0],setFormErrors=_useState4[1];// switch to use our fancy limited-time-display message hook\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),saveConfirmed=_useState6[0],setSaveConfirmed=_useState6[1];// const [saveConfirmed, setSaveConfirmed] = useTimedMessage()\nconsole.debug(\"ProfileForm\",\"currentUser=\",currentUser,\"formData=\",formData,\"formErrors=\",formErrors,\"saveConfirmed=\",saveConfirmed);/** on form submit:\n   * - attempt save to backend & report any errors\n   * - if successful\n   *   - clear previous error messages and password\n   *   - show save-confirmed message\n   *   - set current user info throughout the site\n   */function handleSubmit(_x){return _handleSubmit.apply(this,arguments);}/** Handle form data changing */function _handleSubmit(){_handleSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(evt){var profileData,username,updatedUser;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:evt.preventDefault();profileData={firstName:formData.firstName,lastName:formData.lastName,email:formData.email,password:formData.password};username=formData.username;_context.prev=3;_context.next=6;return JoblyApi.saveProfile(username,profileData);case 6:updatedUser=_context.sent;_context.next=14;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](3);debugger;setFormErrors(_context.t0);return _context.abrupt(\"return\");case 14:setFormData(function(f){return _objectSpread(_objectSpread({},f),{},{password:\"\"});});setFormErrors([]);setSaveConfirmed(true);// trigger reloading of user information throughout the site\nsetCurrentUser(updatedUser);case 18:case\"end\":return _context.stop();}}},_callee,null,[[3,9]]);}));return _handleSubmit.apply(this,arguments);}function handleChange(evt){var _evt$target=evt.target,name=_evt$target.name,value=_evt$target.value;setFormData(function(f){return _objectSpread(_objectSpread({},f),{},_defineProperty({},name,value));});setFormErrors([]);}return/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-6 col-lg-4 offset-md-3 offset-lg-4\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Profile\"),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\"},/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Username\"),/*#__PURE__*/React.createElement(\"p\",{className:\"form-control-plaintext\"},formData.username)),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"First Name\"),/*#__PURE__*/React.createElement(\"input\",{name:\"firstName\",className:\"form-control\",value:formData.firstName,onChange:handleChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Last Name\"),/*#__PURE__*/React.createElement(\"input\",{name:\"lastName\",className:\"form-control\",value:formData.lastName,onChange:handleChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Email\"),/*#__PURE__*/React.createElement(\"input\",{name:\"email\",className:\"form-control\",value:formData.email,onChange:handleChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Confirm password to make changes:\"),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",name:\"password\",className:\"form-control\",value:formData.password,onChange:handleChange})),formErrors.length?/*#__PURE__*/React.createElement(Alert,{type:\"danger\",messages:formErrors}):null,saveConfirmed?/*#__PURE__*/React.createElement(Alert,{type:\"success\",messages:[\"Updated successfully.\"]}):null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary btn-block mt-4\",onClick:handleSubmit},\"Save Changes\")))));}export default ProfileForm;","map":{"version":3,"sources":["/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/src/profiles/ProfileForm.js"],"names":["React","useState","useContext","Alert","JoblyApi","UserContext","useTimedMessage","ProfileForm","currentUser","setCurrentUser","firstName","lastName","email","username","password","formData","setFormData","formErrors","setFormErrors","saveConfirmed","setSaveConfirmed","console","debug","handleSubmit","evt","preventDefault","profileData","saveProfile","updatedUser","f","handleChange","target","name","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport Alert from \"../common/Alert\";\nimport JoblyApi from \"../api/api\";\nimport UserContext from \"../auth/UserContext\";\n\n// eslint-disable-next-line\nimport useTimedMessage from \"../hooks/useTimedMessage\";\n\n/** Profile editing form.\n *\n * Displays profile form and handles changes to local form state.\n * Submitting the form calls the API to save, and triggers user reloading\n * throughout the site.\n *\n * Confirmation of a successful save is normally a simple <Alert>, but\n * you can opt-in to our fancy limited-time-display message hook,\n * `useTimedMessage`, but switching the lines below.\n *\n * Routed as /profile\n * Routes -> ProfileForm -> Alert\n */\n\nfunction ProfileForm() {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n  const [formData, setFormData] = useState({\n    firstName: currentUser.firstName,\n    lastName: currentUser.lastName,\n    email: currentUser.email,\n    username: currentUser.username,\n    password: \"\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  // switch to use our fancy limited-time-display message hook\n  const [saveConfirmed, setSaveConfirmed] = useState(false);\n  // const [saveConfirmed, setSaveConfirmed] = useTimedMessage()\n\n  console.debug(\n      \"ProfileForm\",\n      \"currentUser=\", currentUser,\n      \"formData=\", formData,\n      \"formErrors=\", formErrors,\n      \"saveConfirmed=\", saveConfirmed,\n  );\n\n  /** on form submit:\n   * - attempt save to backend & report any errors\n   * - if successful\n   *   - clear previous error messages and password\n   *   - show save-confirmed message\n   *   - set current user info throughout the site\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n\n    let profileData = {\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      password: formData.password,\n    };\n\n    let username = formData.username;\n    let updatedUser;\n\n    try {\n      updatedUser = await JoblyApi.saveProfile(username, profileData);\n    } catch (errors) {\n      debugger;\n      setFormErrors(errors);\n      return;\n    }\n\n    setFormData(f => ({ ...f, password: \"\" }));\n    setFormErrors([]);\n    setSaveConfirmed(true);\n\n    // trigger reloading of user information throughout the site\n    setCurrentUser(updatedUser);\n  }\n\n  /** Handle form data changing */\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(f => ({\n      ...f,\n      [name]: value,\n    }));\n    setFormErrors([]);\n  }\n\n  return (\n      <div className=\"col-md-6 col-lg-4 offset-md-3 offset-lg-4\">\n        <h3>Profile</h3>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <form>\n              <div className=\"form-group\">\n                <label>Username</label>\n                <p className=\"form-control-plaintext\">{formData.username}</p>\n              </div>\n              <div className=\"form-group\">\n                <label>First Name</label>\n                <input\n                    name=\"firstName\"\n                    className=\"form-control\"\n                    value={formData.firstName}\n                    onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Last Name</label>\n                <input\n                    name=\"lastName\"\n                    className=\"form-control\"\n                    value={formData.lastName}\n                    onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Email</label>\n                <input\n                    name=\"email\"\n                    className=\"form-control\"\n                    value={formData.email}\n                    onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Confirm password to make changes:</label>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    className=\"form-control\"\n                    value={formData.password}\n                    onChange={handleChange}\n                />\n              </div>\n\n              {formErrors.length\n                  ? <Alert type=\"danger\" messages={formErrors} />\n                  : null}\n\n              {saveConfirmed\n                  ?\n                  <Alert type=\"success\" messages={[\"Updated successfully.\"]} />\n                  : null}\n\n              <button\n                  className=\"btn btn-primary btn-block mt-4\"\n                  onClick={handleSubmit}\n              >\n                Save Changes\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default ProfileForm;\n"]},"metadata":{},"sourceType":"module"}