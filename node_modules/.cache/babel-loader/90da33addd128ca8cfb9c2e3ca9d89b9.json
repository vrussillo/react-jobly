{"ast":null,"code":"import _regeneratorRuntime from\"/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _defineProperty from\"/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{useHistory}from\"react-router-dom\";import Alert from\"../common/Alert\";/** Login form.\n *\n * Shows form and manages update to state on changes.\n * On submission:\n * - calls login function prop\n * - redirects to /companies route\n *\n * Routes -> LoginForm -> Alert\n * Routed as /login\n */function LoginForm(_ref){var login=_ref.login;var history=useHistory();var _useState=useState({username:\"\",password:\"\"}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),formErrors=_useState4[0],setFormErrors=_useState4[1];console.debug(\"LoginForm\",\"login=\",typeof login,\"formData=\",formData,\"formErrors\",formErrors);/** Handle form submit:\n   *\n   * Calls login func prop and, if successful, redirect to /companies.\n   */function handleSubmit(_x){return _handleSubmit.apply(this,arguments);}/** Update form data field */function _handleSubmit(){_handleSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(evt){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:evt.preventDefault();_context.next=3;return login(formData);case 3:result=_context.sent;if(result.success){history.push(\"/companies\");}else{setFormErrors(result.errors);}case 5:case\"end\":return _context.stop();}}},_callee);}));return _handleSubmit.apply(this,arguments);}function handleChange(evt){var _evt$target=evt.target,name=_evt$target.name,value=_evt$target.value;setFormData(function(l){return _objectSpread(_objectSpread({},l),{},_defineProperty({},name,value));});}return/*#__PURE__*/React.createElement(\"div\",{className:\"LoginForm\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"mb-3\"},\"Log In\"),/*#__PURE__*/React.createElement(\"div\",{className:\"card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Username\"),/*#__PURE__*/React.createElement(\"input\",{name:\"username\",className:\"form-control\",value:formData.username,onChange:handleChange,autoComplete:\"username\",required:true})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Password\"),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",name:\"password\",className:\"form-control\",value:formData.password,onChange:handleChange,autoComplete:\"current-password\",required:true})),formErrors.length?/*#__PURE__*/React.createElement(Alert,{type:\"danger\",messages:formErrors}):null,/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary float-right\",onSubmit:handleSubmit},\"Submit\"))))));}export default LoginForm;","map":{"version":3,"sources":["/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/src/auth/LoginForm.js"],"names":["React","useState","useHistory","Alert","LoginForm","login","history","username","password","formData","setFormData","formErrors","setFormErrors","console","debug","handleSubmit","evt","preventDefault","result","success","push","errors","handleChange","target","name","value","l","length"],"mappings":"w8BAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,iBAAlB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,QAASC,CAAAA,SAAT,MAA8B,IAATC,CAAAA,KAAS,MAATA,KAAS,CAC5B,GAAMC,CAAAA,OAAO,CAAGJ,UAAU,EAA1B,CACA,cAAgCD,QAAQ,CAAC,CACvCM,QAAQ,CAAE,EAD6B,CAEvCC,QAAQ,CAAE,EAF6B,CAAD,CAAxC,wCAAOC,QAAP,eAAiBC,WAAjB,eAIA,eAAoCT,QAAQ,CAAC,EAAD,CAA5C,yCAAOU,UAAP,eAAmBC,aAAnB,eAEAC,OAAO,CAACC,KAAR,CACI,WADJ,CAEI,QAFJ,CAEc,MAAOT,CAAAA,KAFrB,CAGI,WAHJ,CAGiBI,QAHjB,CAII,YAJJ,CAIkBE,UAJlB,EAOA;AACF;AACA;AACA,KAlB8B,QAoBbI,CAAAA,YApBa,iDA8B5B,6BA9B4B,+FAoB5B,iBAA4BC,GAA5B,6HACEA,GAAG,CAACC,cAAJ,GADF,sBAEqBZ,CAAAA,KAAK,CAACI,QAAD,CAF1B,QAEMS,MAFN,eAGE,GAAIA,MAAM,CAACC,OAAX,CAAoB,CAClBb,OAAO,CAACc,IAAR,CAAa,YAAb,EACD,CAFD,IAEO,CACLR,aAAa,CAACM,MAAM,CAACG,MAAR,CAAb,CACD,CAPH,sDApB4B,+CA+B5B,QAASC,CAAAA,YAAT,CAAsBN,GAAtB,CAA2B,CACzB,gBAAwBA,GAAG,CAACO,MAA5B,CAAQC,IAAR,aAAQA,IAAR,CAAcC,KAAd,aAAcA,KAAd,CACAf,WAAW,CAAC,SAAAgB,CAAC,wCAAUA,CAAV,wBAAcF,IAAd,CAAqBC,KAArB,IAAF,CAAX,CACD,CAED,mBACI,2BAAK,SAAS,CAAC,WAAf,eACE,2BAAK,SAAS,CAAC,qDAAf,eACE,0BAAI,SAAS,CAAC,MAAd,WADF,cAGE,2BAAK,SAAS,CAAC,MAAf,eACE,2BAAK,SAAS,CAAC,WAAf,eACE,4BAAM,QAAQ,CAAEV,YAAhB,eACE,2BAAK,SAAS,CAAC,YAAf,eACE,4CADF,cAEE,6BACI,IAAI,CAAC,UADT,CAEI,SAAS,CAAC,cAFd,CAGI,KAAK,CAAEN,QAAQ,CAACF,QAHpB,CAII,QAAQ,CAAEe,YAJd,CAKI,YAAY,CAAC,UALjB,CAMI,QAAQ,KANZ,EAFF,CADF,cAYE,2BAAK,SAAS,CAAC,YAAf,eACE,4CADF,cAEE,6BACI,IAAI,CAAC,UADT,CAEI,IAAI,CAAC,UAFT,CAGI,SAAS,CAAC,cAHd,CAII,KAAK,CAAEb,QAAQ,CAACD,QAJpB,CAKI,QAAQ,CAAEc,YALd,CAMI,YAAY,CAAC,kBANjB,CAOI,QAAQ,KAPZ,EAFF,CAZF,CAyBGX,UAAU,CAACgB,MAAX,cACK,oBAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,QAAQ,CAAEhB,UAA/B,EADL,CAEK,IA3BR,cA6BE,8BACI,SAAS,CAAC,6BADd,CAEI,QAAQ,CAAEI,YAFd,WA7BF,CADF,CADF,CAHF,CADF,CADJ,CAgDD,CAED,cAAeX,CAAAA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\n\n/** Login form.\n *\n * Shows form and manages update to state on changes.\n * On submission:\n * - calls login function prop\n * - redirects to /companies route\n *\n * Routes -> LoginForm -> Alert\n * Routed as /login\n */\n\nfunction LoginForm({ login }) {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  console.debug(\n      \"LoginForm\",\n      \"login=\", typeof login,\n      \"formData=\", formData,\n      \"formErrors\", formErrors,\n  );\n\n  /** Handle form submit:\n   *\n   * Calls login func prop and, if successful, redirect to /companies.\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    let result = await login(formData);\n    if (result.success) {\n      history.push(\"/companies\");\n    } else {\n      setFormErrors(result.errors);\n    }\n  }\n\n  /** Update form data field */\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(l => ({ ...l, [name]: value }));\n  }\n\n  return (\n      <div className=\"LoginForm\">\n        <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n          <h3 className=\"mb-3\">Log In</h3>\n\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label>Username</label>\n                  <input\n                      name=\"username\"\n                      className=\"form-control\"\n                      value={formData.username}\n                      onChange={handleChange}\n                      autoComplete=\"username\"\n                      required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Password</label>\n                  <input\n                      type=\"password\"\n                      name=\"password\"\n                      className=\"form-control\"\n                      value={formData.password}\n                      onChange={handleChange}\n                      autoComplete=\"current-password\"\n                      required\n                  />\n                </div>\n\n                {formErrors.length\n                    ? <Alert type=\"danger\" messages={formErrors} />\n                    : null}\n\n                <button\n                    className=\"btn btn-primary float-right\"\n                    onSubmit={handleSubmit}\n                >\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}