{"ast":null,"code":"import _regeneratorRuntime from\"/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from\"react\";import\"./JobCard.css\";import UserContext from\"../auth/UserContext\";/** Show limited information about a job.\n *\n * Is rendered by JobCardList to show a \"card\" for each job.\n *\n * Receives apply func prop from parent, which is called on apply.\n *\n * JobCardList -> JobCard\n */function JobCard(_ref){var id=_ref.id,title=_ref.title,salary=_ref.salary,equity=_ref.equity,companyName=_ref.companyName;console.debug(\"JobCard\");var _useContext=useContext(UserContext),hasAppliedToJob=_useContext.hasAppliedToJob,applyToJob=_useContext.applyToJob;var _useState=useState(),_useState2=_slicedToArray(_useState,2),applied=_useState2[0],setApplied=_useState2[1];React.useEffect(function updateAppliedStatus(){console.debug(\"JobCard useEffect updateAppliedStatus\",\"id=\",id);setApplied(hasAppliedToJob(id));},[id,hasAppliedToJob]);/** Apply for a job */function handleApply(_x){return _handleApply.apply(this,arguments);}function _handleApply(){_handleApply=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(evt){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!hasAppliedToJob(id)){_context.next=2;break;}return _context.abrupt(\"return\");case 2:applyToJob(id);setApplied(true);case 4:case\"end\":return _context.stop();}}},_callee);}));return _handleApply.apply(this,arguments);}return/*#__PURE__*/React.createElement(\"div\",{className:\"JobCard card\"},\" \",applied,/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"card-title\"},title),/*#__PURE__*/React.createElement(\"p\",null,companyName),salary&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"small\",null,\"Salary: \",formatSalary(salary))),equity!==undefined&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"small\",null,\"Equity: \",equity)),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-danger font-weight-bold text-uppercase float-right\",onClick:handleApply,disabled:applied},applied?\"Applied\":\"Apply\")));}/** Render integer salary like '$1,250,343' */function formatSalary(salary){var digitsRev=[];var salaryStr=salary.toString();for(var i=salaryStr.length-1;i>=0;i--){digitsRev.push(salaryStr[i]);if(i>0&&i%3===0)digitsRev.push(\",\");}return digitsRev.reverse().join(\"\");}export default JobCard;","map":{"version":3,"sources":["/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/src/jobs/JobCard.js"],"names":["React","useContext","useState","UserContext","JobCard","id","title","salary","equity","companyName","console","debug","hasAppliedToJob","applyToJob","applied","setApplied","useEffect","updateAppliedStatus","handleApply","evt","formatSalary","undefined","digitsRev","salaryStr","toString","i","length","push","reverse","join"],"mappings":"mkBAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,KAA4C,OAA5C,CACA,MAAO,eAAP,CACA,MAAOC,CAAAA,WAAP,KAAwB,qBAAxB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,QAASC,CAAAA,OAAT,MAA6D,IAA1CC,CAAAA,EAA0C,MAA1CA,EAA0C,CAAtCC,KAAsC,MAAtCA,KAAsC,CAA/BC,MAA+B,MAA/BA,MAA+B,CAAvBC,MAAuB,MAAvBA,MAAuB,CAAfC,WAAe,MAAfA,WAAe,CAC3DC,OAAO,CAACC,KAAR,CAAc,SAAd,EAEA,gBAAwCV,UAAU,CAACE,WAAD,CAAlD,CAAQS,eAAR,aAAQA,eAAR,CAAyBC,UAAzB,aAAyBA,UAAzB,CACA,cAA8BX,QAAQ,EAAtC,wCAAOY,OAAP,eAAgBC,UAAhB,eAEAf,KAAK,CAACgB,SAAN,CAAgB,QAASC,CAAAA,mBAAT,EAA+B,CAC7CP,OAAO,CAACC,KAAR,CAAc,uCAAd,CAAuD,KAAvD,CAA8DN,EAA9D,EAEAU,UAAU,CAACH,eAAe,CAACP,EAAD,CAAhB,CAAV,CACD,CAJD,CAIG,CAACA,EAAD,CAAKO,eAAL,CAJH,EAMA,sBAZ2D,QAa5CM,CAAAA,WAb4C,6IAa3D,iBAA2BC,GAA3B,sHACMP,eAAe,CAACP,EAAD,CADrB,iEAEEQ,UAAU,CAACR,EAAD,CAAV,CACAU,UAAU,CAAC,IAAD,CAAV,CAHF,sDAb2D,8CAmB3D,mBACI,2BAAK,SAAS,CAAC,cAAf,MAAgCD,OAAhC,cACE,2BAAK,SAAS,CAAC,WAAf,eACE,0BAAI,SAAS,CAAC,YAAd,EAA4BR,KAA5B,CADF,cAEE,6BAAIG,WAAJ,CAFF,CAGGF,MAAM,eAAI,4CAAK,4CAAgBa,YAAY,CAACb,MAAD,CAA5B,CAAL,CAHb,CAIGC,MAAM,GAAKa,SAAX,eAAwB,4CAAK,4CAAgBb,MAAhB,CAAL,CAJ3B,cAKE,8BACI,SAAS,CAAC,4DADd,CAEI,OAAO,CAAEU,WAFb,CAGI,QAAQ,CAAEJ,OAHd,EAKGA,OAAO,CAAG,SAAH,CAAe,OALzB,CALF,CADF,CADJ,CAiBD,CAED,8CAEA,QAASM,CAAAA,YAAT,CAAsBb,MAAtB,CAA8B,CAC5B,GAAMe,CAAAA,SAAS,CAAG,EAAlB,CACA,GAAMC,CAAAA,SAAS,CAAGhB,MAAM,CAACiB,QAAP,EAAlB,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAGF,SAAS,CAACG,MAAV,CAAmB,CAAhC,CAAmCD,CAAC,EAAI,CAAxC,CAA2CA,CAAC,EAA5C,CAAgD,CAC9CH,SAAS,CAACK,IAAV,CAAeJ,SAAS,CAACE,CAAD,CAAxB,EACA,GAAIA,CAAC,CAAG,CAAJ,EAASA,CAAC,CAAG,CAAJ,GAAU,CAAvB,CAA0BH,SAAS,CAACK,IAAV,CAAe,GAAf,EAC3B,CAED,MAAOL,CAAAA,SAAS,CAACM,OAAV,GAAoBC,IAApB,CAAyB,EAAzB,CAAP,CACD,CAGD,cAAezB,CAAAA,OAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport \"./JobCard.css\";\nimport UserContext from \"../auth/UserContext\";\n\n/** Show limited information about a job.\n *\n * Is rendered by JobCardList to show a \"card\" for each job.\n *\n * Receives apply func prop from parent, which is called on apply.\n *\n * JobCardList -> JobCard\n */\n\nfunction JobCard({ id, title, salary, equity, companyName }) {\n  console.debug(\"JobCard\");\n\n  const { hasAppliedToJob, applyToJob } = useContext(UserContext);\n  const [applied, setApplied] = useState();\n\n  React.useEffect(function updateAppliedStatus() {\n    console.debug(\"JobCard useEffect updateAppliedStatus\", \"id=\", id);\n\n    setApplied(hasAppliedToJob(id));\n  }, [id, hasAppliedToJob]);\n\n  /** Apply for a job */\n  async function handleApply(evt) {\n    if (hasAppliedToJob(id)) return;\n    applyToJob(id);\n    setApplied(true);\n  }\n\n  return (\n      <div className=\"JobCard card\"> {applied}\n        <div className=\"card-body\">\n          <h6 className=\"card-title\">{title}</h6>\n          <p>{companyName}</p>\n          {salary && <div><small>Salary: {formatSalary(salary)}</small></div>}\n          {equity !== undefined && <div><small>Equity: {equity}</small></div>}\n          <button\n              className=\"btn btn-danger font-weight-bold text-uppercase float-right\"\n              onClick={handleApply}\n              disabled={applied}\n          >\n            {applied ? \"Applied\" : \"Apply\"}\n          </button>\n        </div>\n      </div>\n  );\n}\n\n/** Render integer salary like '$1,250,343' */\n\nfunction formatSalary(salary) {\n  const digitsRev = [];\n  const salaryStr = salary.toString();\n\n  for (let i = salaryStr.length - 1; i >= 0; i--) {\n    digitsRev.push(salaryStr[i]);\n    if (i > 0 && i % 3 === 0) digitsRev.push(\",\");\n  }\n\n  return digitsRev.reverse().join(\"\");\n}\n\n\nexport default JobCard;\n"]},"metadata":{},"sourceType":"module"}