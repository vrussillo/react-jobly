{"ast":null,"code":"var _jsxFileName = \"/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly/src/routes-nav/PrivateRoute.js\";\nimport React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n/** \"Higher-Order Component\" for private routes.\n *\n * In routing component, use these instead of <Route ...>. This component\n * will check if there is a valid current user and only continues to the\n * route if so. If no user is present, redirects to login form.\n */\n\nfunction PrivateRoute(_ref) {\n  let {\n    exact,\n    path,\n    children\n  } = _ref;\n  const {\n    currentUser\n  } = useContext(UserContext);\n  console.debug(\"PrivateRoute\", \"exact=\", exact, \"path=\", path, \"currentUser=\", currentUser);\n\n  if (!currentUser) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Route, {\n    exact: exact,\n    path: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, children);\n}\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly/src/routes-nav/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","UserContext","PrivateRoute","exact","path","children","currentUser","console","debug"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,YAAT,OAAiD;AAAA,MAA3B;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA;AAAf,GAA2B;AAC/C,QAAM;AAAEC,IAAAA;AAAF,MAAkBR,UAAU,CAACG,WAAD,CAAlC;AAEAM,EAAAA,OAAO,CAACC,KAAR,CACI,cADJ,EAEI,QAFJ,EAEcL,KAFd,EAGI,OAHJ,EAGaC,IAHb,EAII,cAJJ,EAIoBE,WAJpB;;AAOA,MAAI,CAACA,WAAL,EAAkB;AAChB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,sBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEH,KAAd;AAAqB,IAAA,IAAI,EAAEC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QADH,CADJ;AAKD;;AAED,eAAeH,YAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n\n/** \"Higher-Order Component\" for private routes.\n *\n * In routing component, use these instead of <Route ...>. This component\n * will check if there is a valid current user and only continues to the\n * route if so. If no user is present, redirects to login form.\n */\n\nfunction PrivateRoute({ exact, path, children }) {\n  const { currentUser } = useContext(UserContext);\n\n  console.debug(\n      \"PrivateRoute\",\n      \"exact=\", exact,\n      \"path=\", path,\n      \"currentUser=\", currentUser,\n  );\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n      <Route exact={exact} path={path}>\n        {children}\n      </Route>\n  );\n}\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}