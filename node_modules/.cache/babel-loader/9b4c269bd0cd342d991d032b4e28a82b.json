{"ast":null,"code":"var _jsxFileName = \"/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/src/companies/CompanyList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport SearchForm from \"../common/SearchForm\";\nimport JoblyApi from \"../api/api\";\nimport CompanyCard from \"./CompanyCard\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n/** Show page with list of companies.\n *\n * On mount, loads companies from API.\n * Re-loads filtered companies on submit from search form.\n *\n * This is routed to at /companies\n *\n * Routes -> { CompanyCard, SearchForm }\n */\n\nfunction CompanyList() {\n  console.debug(\"CompanyList\");\n  const [companies, setCompanies] = useState(null);\n  useEffect(function getCompaniesOnMount() {\n    console.debug(\"CompanyList useEffect getCompaniesOnMount\");\n    search();\n  }, []);\n  /** Triggered by search form submit; reloads companies. */\n\n  async function search(name) {\n    let companies = await JoblyApi.getCompanies(name);\n    setCompanies(companies);\n  }\n\n  if (!companies) return /*#__PURE__*/React.createElement(LoadingSpinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 26\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CompanyList col-md-8 offset-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchForm, {\n    searchFor: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), companies.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CompanyList-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, companies.map(c => /*#__PURE__*/React.createElement(CompanyCard, {\n    key: c.handle,\n    handle: c.handle,\n    name: c.name,\n    description: c.description,\n    logoUrl: c.logoUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }))) : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Sorry, no results were found!\"));\n}\n\nexport default CompanyList;","map":{"version":3,"sources":["/Users/vaughnrussillo/SpringBoard_Projects/react/react-jobly-solution/jobly/src/companies/CompanyList.js"],"names":["React","useState","useEffect","SearchForm","JoblyApi","CompanyCard","LoadingSpinner","CompanyList","console","debug","companies","setCompanies","getCompaniesOnMount","search","name","getCompanies","length","map","c","handle","description","logoUrl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,WAAT,GAAuB;AACrBC,EAAAA,OAAO,CAACC,KAAR,CAAc,aAAd;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,SAASU,mBAAT,GAA+B;AACvCJ,IAAAA,OAAO,CAACC,KAAR,CAAc,2CAAd;AACAI,IAAAA,MAAM;AACP,GAHQ,EAGN,EAHM,CAAT;AAKA;;AACA,iBAAeA,MAAf,CAAsBC,IAAtB,EAA4B;AAC1B,QAAIJ,SAAS,GAAG,MAAMN,QAAQ,CAACW,YAAT,CAAsBD,IAAtB,CAAtB;AACAH,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACD;;AAED,MAAI,CAACA,SAAL,EAAgB,oBAAO,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEhB,sBACI;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEG,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGH,SAAS,CAACM,MAAV,gBAEO;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,SAAS,CAACO,GAAV,CAAcC,CAAC,iBACZ,oBAAC,WAAD;AACI,IAAA,GAAG,EAAEA,CAAC,CAACC,MADX;AAEI,IAAA,MAAM,EAAED,CAAC,CAACC,MAFd;AAGI,IAAA,IAAI,EAAED,CAAC,CAACJ,IAHZ;AAII,IAAA,WAAW,EAAEI,CAAC,CAACE,WAJnB;AAKI,IAAA,OAAO,EAAEF,CAAC,CAACG,OALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADH,CAFP,gBAcO;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAhBV,CADJ;AAqBD;;AAED,eAAed,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SearchForm from \"../common/SearchForm\";\nimport JoblyApi from \"../api/api\";\nimport CompanyCard from \"./CompanyCard\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\n/** Show page with list of companies.\n *\n * On mount, loads companies from API.\n * Re-loads filtered companies on submit from search form.\n *\n * This is routed to at /companies\n *\n * Routes -> { CompanyCard, SearchForm }\n */\n\nfunction CompanyList() {\n  console.debug(\"CompanyList\");\n\n  const [companies, setCompanies] = useState(null);\n\n  useEffect(function getCompaniesOnMount() {\n    console.debug(\"CompanyList useEffect getCompaniesOnMount\");\n    search();\n  }, []);\n\n  /** Triggered by search form submit; reloads companies. */\n  async function search(name) {\n    let companies = await JoblyApi.getCompanies(name);\n    setCompanies(companies);\n  }\n\n  if (!companies) return <LoadingSpinner />;\n\n  return (\n      <div className=\"CompanyList col-md-8 offset-md-2\">\n        <SearchForm searchFor={search} />\n        {companies.length\n            ? (\n                <div className=\"CompanyList-list\">\n                  {companies.map(c => (\n                      <CompanyCard\n                          key={c.handle}\n                          handle={c.handle}\n                          name={c.name}\n                          description={c.description}\n                          logoUrl={c.logoUrl}\n                      />\n                  ))}\n                </div>\n            ) : (\n                <p className=\"lead\">Sorry, no results were found!</p>\n            )}\n      </div>\n  );\n}\n\nexport default CompanyList;\n"]},"metadata":{},"sourceType":"module"}